from flask import Flask, request
from pybit.unified_trading import HTTP
import json
import requests

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
with open("config.json") as f:
    config = json.load(f)

api_key = config["api_key"]
api_secret = config["api_secret"]
default_symbol = config["symbol"]
default_base_qty = config["base_qty"]
webhook_password = config["webhook_password"]
telegram_token = config["telegram_token"]
telegram_chat_id = config["telegram_chat_id"]

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Flask
app = Flask(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–µ—Å—ñ—ó Bybit
session = HTTP(
    api_key=api_key,
    api_secret=api_secret,
    testnet=True
)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{telegram_token}/sendMessage"
    data = {"chat_id": telegram_chat_id, "text": message}
    try:
        requests.post(url, data=data)
    except Exception as e:
        print(f"Telegram Error: {e}")

# –í–µ–±—Ö—É–∫ –º–∞—Ä—à—Ä—É—Ç
@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.json

        if not data or data.get("password") != webhook_password:
            return {"error": "Unauthorized"}, 401

        side = data.get("side", "Buy")
        symbol = data.get("symbol", default_symbol)
        qty = data.get("qty", default_base_qty)

        try:
            qty = float(qty)  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ qty –Ω–∞ float
        except (ValueError, TypeError):
            return {"error": "Invalid quantity"}, 400

        order = session.place_order(
            category="linear",
            symbol=symbol,
            side=side,
            order_type="Market",
            qty=str(qty),
            time_in_force="GoodTillCancel"
        )

        msg = f"‚úÖ –û—Ä–¥–µ—Ä –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!\n–ü–∞—Ä–∞: {symbol}\n–°—Ç–æ—Ä–æ–Ω–∞: {side}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å: {qty}\n\n–í—ñ–¥–ø–æ–≤—ñ–¥—å: {order}"
        print(msg)
        send_telegram_message(msg)

        return {"success": True, "order": order}

    except Exception as e:
        error_msg = f"üî• –ü–æ–º–∏–ª–∫–∞ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ webhook: {str(e)}"
        print(error_msg)
        send_telegram_message(error_msg)
        return {"error": str(e)}, 500

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == '__main__':
    print("üöÄ Flask-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 5000")
    app.run(host="0.0.0.0", port=5000)




